type Coin {
  coinId: String!
  name: String!
  image: String!
  currentPrice: Float!
}

type Watchlist {
  userId: String!
  coins: [Coin!]!
}

type Query {
  test: String
  getWatchlist(userId: String!): Watchlist
}

type Mutation {
  addToWatchlist(userId: String!, coin: CoinInput!): Watchlist
  removeFromWatchlist(userId: String!, coinId: String!): Watchlist
}

input CoinInput {
  coinId: String!
  name: String!
  image: String!
  currentPrice: Float!
}
